{"version":3,"file":"static/js/230.5a1051c9.chunk.js","mappings":"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","sources":["../node_modules/@gravity-ui/uikit/build/esm/components/Alert/AlertContext.js","../node_modules/@gravity-ui/uikit/build/esm/components/Alert/useAlertContext.js","../node_modules/@gravity-ui/uikit/build/esm/components/Alert/AlertAction.js","../node_modules/@gravity-ui/uikit/build/esm/components/Alert/constants.js","../node_modules/@gravity-ui/uikit/build/esm/components/Alert/AlertContextProvider.js","../node_modules/@gravity-ui/icons/esm/CircleXmarkFill.js","../node_modules/@gravity-ui/icons/esm/CircleXmark.js","../node_modules/@gravity-ui/icons/esm/CircleInfoFill.js","../node_modules/@gravity-ui/icons/esm/CircleCheckFill.js","../node_modules/@gravity-ui/icons/esm/TriangleExclamationFill.js","../node_modules/@gravity-ui/icons/esm/ThunderboltFill.js","../node_modules/@gravity-ui/uikit/build/esm/components/Alert/AlertIcon.js","../node_modules/@gravity-ui/uikit/build/esm/components/Alert/AlertTitle.js","../node_modules/@gravity-ui/uikit/build/esm/components/Alert/Alert.js","../node_modules/@gravity-ui/uikit/build/esm/components/Alert/AlertActions.js","../node_modules/@gravity-ui/src/components/AsideHeader/useAsideHeaderTopPanel.tsx","../node_modules/@gravity-ui/src/components/AsideHeader/components/TopPanel.tsx"],"sourcesContent":["import React from 'react';\nexport const AlertContext = React.createContext(null);\n","import React from 'react';\nimport { AlertContext } from './AlertContext';\nexport const useAlertContext = () => {\n    const context = React.useContext(AlertContext);\n    if (!context)\n        throw new Error('Alert: `useAlertContext` hook is used out of \"AlertContext\"');\n    return context;\n};\n","import React from 'react';\nimport { Button } from '../Button';\nimport { useAlertContext } from './useAlertContext';\nexport const AlertAction = (props) => {\n    const { view } = useAlertContext();\n    return React.createElement(Button, Object.assign({ view: view === 'filled' ? 'normal-contrast' : undefined }, props));\n};\n","import { block } from '../utils/cn';\nimport './Alert.css';\nexport const DEFAULT_ICON_SIZE = 18;\nexport const bAlert = block('alert');\n","import React from 'react';\nimport { AlertContext } from './AlertContext';\nexport const AlertContextProvider = ({ layout, view, children }) => {\n    return React.createElement(AlertContext.Provider, { value: { layout, view } }, children);\n};\n","import * as React from 'react';\nconst CircleXmarkFill = (props) => (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\"path\", { fill: \"currentColor\", fillRule: \"evenodd\", d: \"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14ZM6.53 5.47a.75.75 0 0 0-1.06 1.06L6.94 8 5.47 9.47a.75.75 0 1 0 1.06 1.06L8 9.06l1.47 1.47a.75.75 0 1 0 1.06-1.06L9.06 8l1.47-1.47a.75.75 0 1 0-1.06-1.06L8 6.94 6.53 5.47Z\", clipRule: \"evenodd\" })));\nexport default CircleXmarkFill;\n","import * as React from 'react';\nconst CircleXmark = (props) => (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\"path\", { fill: \"currentColor\", fillRule: \"evenodd\", d: \"M13.5 8a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0ZM15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0ZM6.53 5.47a.75.75 0 0 0-1.06 1.06L6.94 8 5.47 9.47a.75.75 0 1 0 1.06 1.06L8 9.06l1.47 1.47a.75.75 0 1 0 1.06-1.06L9.06 8l1.47-1.47a.75.75 0 1 0-1.06-1.06L8 6.94 6.53 5.47Z\", clipRule: \"evenodd\" })));\nexport default CircleXmark;\n","import * as React from 'react';\nconst CircleInfoFill = (props) => (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\"path\", { fill: \"currentColor\", fillRule: \"evenodd\", d: \"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm1-9.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM8 7.75a.75.75 0 0 1 .75.75V11a.75.75 0 0 1-1.5 0V8.5A.75.75 0 0 1 8 7.75Z\", clipRule: \"evenodd\" })));\nexport default CircleInfoFill;\n","import * as React from 'react';\nconst CircleCheckFill = (props) => (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\"path\", { fill: \"currentColor\", fillRule: \"evenodd\", d: \"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm3.1-8.55a.75.75 0 1 0-1.2-.9L7.419 8.858 6.03 7.47a.75.75 0 0 0-1.06 1.06l2 2a.75.75 0 0 0 1.13-.08l3-4Z\", clipRule: \"evenodd\" })));\nexport default CircleCheckFill;\n","import * as React from 'react';\nconst TriangleExclamationFill = (props) => (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\"path\", { fill: \"currentColor\", fillRule: \"evenodd\", d: \"M5.836 2.244c.962-1.665 3.366-1.665 4.328 0l4.917 8.505c.964 1.666-.239 3.751-2.164 3.751H3.083c-1.925 0-3.128-2.085-2.164-3.751l4.917-8.505ZM8 5a.75.75 0 0 1 .75.75v2a.75.75 0 1 1-1.5 0v-2A.75.75 0 0 1 8 5Zm1 5.75a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\", clipRule: \"evenodd\" })));\nexport default TriangleExclamationFill;\n","import * as React from 'react';\nconst ThunderboltFill = (props) => (React.createElement(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: 16, height: 16, fill: \"none\", viewBox: \"0 0 16 16\" }, props),\n    React.createElement(\"path\", { fill: \"currentColor\", d: \"m14.61 6.914-7.632 8.08a1.614 1.614 0 0 1-2.69-1.66L5.5 10H2.677A1.677 1.677 0 0 1 1.12 7.7l2.323-5.807A2.216 2.216 0 0 1 5.5.5h4c.968 0 1.637.967 1.298 1.873L10 4.5h3.569a1.431 1.431 0 0 1 1.04 2.414Z\" })));\nexport default ThunderboltFill;\n","import React from 'react';\nimport { CircleCheck, CircleCheckFill, CircleInfo, CircleInfoFill, CircleXmark, CircleXmarkFill, Thunderbolt, ThunderboltFill, TriangleExclamation, TriangleExclamationFill, } from '@gravity-ui/icons';\nimport { Icon } from '../Icon';\nimport { colorText } from '../Text/colorText/colorText';\nimport { DEFAULT_ICON_SIZE, bAlert } from './constants';\nconst typeToIcon = {\n    danger: {\n        filled: CircleXmarkFill,\n        outlined: CircleXmark,\n    },\n    info: {\n        filled: CircleInfoFill,\n        outlined: CircleInfo,\n    },\n    success: {\n        filled: CircleCheckFill,\n        outlined: CircleCheck,\n    },\n    warning: {\n        filled: TriangleExclamationFill,\n        outlined: TriangleExclamation,\n    },\n    utility: {\n        filled: ThunderboltFill,\n        outlined: Thunderbolt,\n    },\n    normal: null,\n};\nexport const AlertIcon = ({ className, theme, view = 'filled', size = DEFAULT_ICON_SIZE, }) => {\n    const iconByTheme = typeToIcon[theme];\n    if (!iconByTheme) {\n        return null;\n    }\n    let color;\n    if (theme === 'success') {\n        color = 'positive';\n    }\n    else if (theme !== 'normal') {\n        color = theme;\n    }\n    return (React.createElement(\"div\", { className: bAlert('icon', colorText({ color }, className)) },\n        React.createElement(Icon, { data: iconByTheme[view], size: size })));\n};\n","import React from 'react';\nimport { Text } from '../Text';\nimport { bAlert } from './constants';\nexport const AlertTitle = ({ text, className }) => {\n    return (React.createElement(Text, { variant: \"subheader-2\", className: bAlert('title', className) }, text));\n};\n","import React from 'react';\nimport { Xmark } from '@gravity-ui/icons';\nimport { Button } from '../Button';\nimport { Card } from '../Card';\nimport { Icon } from '../Icon';\nimport { colorText } from '../Text';\nimport { Flex, spacing } from '../layout';\nimport { AlertAction } from './AlertAction';\nimport { AlertActions } from './AlertActions';\nimport { AlertContextProvider } from './AlertContextProvider';\nimport { AlertIcon } from './AlertIcon';\nimport { AlertTitle } from './AlertTitle';\nimport { DEFAULT_ICON_SIZE, bAlert } from './constants';\nexport const Alert = (props) => {\n    const { theme = 'normal', view = 'filled', layout = 'vertical', message, className, corners, style, onClose, align, qa, } = props;\n    return (React.createElement(AlertContextProvider, { layout: layout, view: view },\n        React.createElement(Card, { style: style, className: bAlert({ corners }, spacing({ py: 4, px: 5 }, className)), theme: theme, view: view, qa: qa },\n            React.createElement(Flex, { gap: \"3\", alignItems: align },\n                props.icon || React.createElement(Alert.Icon, { theme: theme, view: view }),\n                React.createElement(Flex, { direction: layout === 'vertical' ? 'column' : 'row', gap: \"5\", grow: true },\n                    React.createElement(Flex, { gap: \"2\", grow: true, className: bAlert('text-content') },\n                        React.createElement(Flex, { direction: \"column\", gap: \"1\", grow: true, justifyContent: align },\n                            typeof props.title === 'string' ? (React.createElement(Alert.Title, { text: props.title })) : (props.title),\n                            message)),\n                    Array.isArray(props.actions) ? (React.createElement(Alert.Actions, { items: props.actions })) : (props.actions)),\n                onClose && (React.createElement(Button, { view: \"flat\", onClick: onClose },\n                    React.createElement(Icon, { data: Xmark, size: DEFAULT_ICON_SIZE, className: colorText({ color: 'secondary' }) })))))));\n};\nAlert.Icon = AlertIcon;\nAlert.Title = AlertTitle;\nAlert.Actions = AlertActions;\nAlert.Action = AlertAction;\n","import React from 'react';\nimport { Flex } from '../layout';\nimport { AlertAction } from './AlertAction';\nimport { bAlert } from './constants';\nimport { useAlertContext } from './useAlertContext';\nexport const AlertActions = ({ items, children, className }) => {\n    const { layout } = useAlertContext();\n    return (React.createElement(Flex, { className: bAlert('actions', { minContent: layout === 'horizontal' }, className), direction: \"row\", gap: \"3\", wrap: true, alignItems: layout === 'horizontal' ? 'center' : 'flex-start' }, (items === null || items === void 0 ? void 0 : items.map(({ handler, text }, i) => (React.createElement(AlertAction, { key: i, onClick: handler }, text)))) || children));\n};\n","import React from 'react';\n\nimport debounceFn from 'lodash/debounce';\n\nimport {AsideHeaderTopAlertProps} from '../types';\n\ntype AsideHeaderTopPanel = {\n    topRef: React.RefObject<HTMLDivElement>;\n    updateTopSize: () => void;\n};\n\nconst G_ROOT_CLASS_NAME = 'g-root';\n\nconst useRefHeight = (ref: React.RefObject<HTMLDivElement>) => {\n    const [topHeight, setTopHeight] = React.useState(0);\n    React.useEffect(() => {\n        if (ref.current) {\n            const {current} = ref;\n            setTopHeight(current.clientHeight);\n        }\n    }, [ref]);\n    return topHeight;\n};\n\nexport const useAsideHeaderTopPanel = ({\n    topAlert,\n}: {\n    topAlert?: AsideHeaderTopAlertProps;\n}): AsideHeaderTopPanel => {\n    const topRef = React.useRef<HTMLDivElement>(null);\n    const topHeight = useRefHeight(topRef);\n\n    const setAsideTopPanelHeight = React.useCallback((clientHeight: number) => {\n        const gRootElement = document\n            .getElementsByClassName(G_ROOT_CLASS_NAME)\n            .item(0) as HTMLElement | null;\n        gRootElement?.style.setProperty('--gn-aside-top-panel-height', clientHeight + 'px');\n    }, []);\n\n    const updateTopSize = React.useCallback(() => {\n        if (topRef.current) {\n            setAsideTopPanelHeight(topRef.current?.clientHeight || 0);\n        }\n    }, [topRef, setAsideTopPanelHeight]);\n\n    React.useLayoutEffect(() => {\n        const updateTopSizeDebounce = debounceFn(updateTopSize, 200, {leading: true});\n\n        if (topAlert) {\n            window.addEventListener('resize', updateTopSizeDebounce);\n            updateTopSizeDebounce();\n        }\n        return () => {\n            window.removeEventListener('resize', updateTopSizeDebounce);\n            setAsideTopPanelHeight(0);\n        };\n    }, [topAlert, topHeight, topRef, updateTopSize, setAsideTopPanelHeight]);\n\n    return {\n        topRef,\n        updateTopSize,\n    };\n};\n","import React from 'react';\n\nimport {Alert} from '@gravity-ui/uikit';\n\nimport {AsideHeaderTopAlertProps} from '../../types';\nimport {useAsideHeaderTopPanel} from '../useAsideHeaderTopPanel';\nimport {b} from '../utils';\n\ntype Props = {\n    topAlert?: AsideHeaderTopAlertProps;\n};\n\nexport const TopPanel = ({topAlert}: Props) => {\n    const {topRef, updateTopSize} = useAsideHeaderTopPanel({topAlert});\n\n    const [opened, setOpened] = React.useState(true);\n\n    const handleClose = React.useCallback(() => {\n        setOpened(false);\n        topAlert?.onCloseTopAlert?.();\n    }, [topAlert]);\n\n    React.useEffect(() => {\n        if (!opened) {\n            updateTopSize();\n        }\n    }, [opened, updateTopSize]);\n\n    if (!topAlert || !topAlert.message) {\n        return null;\n    }\n\n    return (\n        <div ref={topRef} className={b('pane-top', {opened})}>\n            {opened && (\n                <React.Fragment>\n                    <Alert\n                        className={b('pane-top-alert', {\n                            centered: topAlert.centered,\n                            dense: topAlert.dense,\n                        })}\n                        corners=\"square\"\n                        layout=\"horizontal\"\n                        theme={topAlert.theme || 'warning'}\n                        icon={topAlert.icon}\n                        title={topAlert.title}\n                        message={topAlert.message}\n                        actions={topAlert.actions}\n                        onClose={topAlert.closable ? handleClose : undefined}\n                    />\n                    <div className={b('pane-top-divider')}></div>\n                </React.Fragment>\n            )}\n        </div>\n    );\n};\n"],"names":["AlertContext","React","useAlertContext","context","Error","AlertAction","props","view","Button","Object","assign","undefined","DEFAULT_ICON_SIZE","bAlert","block","AlertContextProvider","_ref","layout","children","Provider","value","xmlns","width","height","fill","viewBox","fillRule","d","clipRule","typeToIcon","danger","filled","CircleXmarkFill","outlined","CircleXmark","info","CircleInfoFill","CircleInfo","success","CircleCheckFill","CircleCheck","warning","TriangleExclamationFill","TriangleExclamation","utility","ThunderboltFill","Thunderbolt","normal","Alert","theme","message","className","corners","style","onClose","align","qa","Card","spacing","py","px","Flex","gap","alignItems","icon","Icon","direction","grow","justifyContent","title","Title","text","Array","isArray","actions","Actions","items","onClick","data","Xmark","size","colorText","color","iconByTheme","Text","variant","minContent","wrap","map","_ref2","i","handler","key","Action","useAsideHeaderTopPanel","topAlert","topRef","React__default","topHeight","ref","setTopHeight","current","clientHeight","useRefHeight","setAsideTopPanelHeight","gRootElement","document","getElementsByClassName","item","setProperty","updateTopSize","_a","updateTopSizeDebounce","debounce_1","leading","window","addEventListener","removeEventListener","TopPanel","opened","setOpened","handleClose","onCloseTopAlert","call","b","centered","dense","closable"],"sourceRoot":""}